{"version":3,"file":"public/scripts/app.js","sources":["app/application.js","app/collections/receipts.js","app/initialize.js","app/locales/en.js","app/locales/fr.js","app/models/receipt.js","app/router.js","app/templates/coach.jade","app/templates/control.jade","app/templates/data.jade","app/templates/home.jade","app/templates/info.jade","app/templates/stats.jade","app/views/app_view.js","app/views/coach_view.js","app/views/control_view.js","app/views/data_view.js","app/views/info_view.js","app/views/stats_view.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AALA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AApCA;;A,CCAA;;AACA;AACA;AACA;AAHA;;A,CCAA;;AACA;AACA;AACA;AAHA;;A,CCAA;;AACA;AACA;AACA;AAHA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA/CA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAdA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA5DA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAzBA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAvEA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAxEA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAzBA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAjUA;;A","sourcesContent":["module.exports = {\n\n    initialize: function() {\n        var Router = require('router');\n        this.router = new Router();\n        Backbone.history.start();\n    }\n};","Receipt = require('../models/receipt');\nmodule.exports = ReceiptDetails = Backbone.Collection.extend({\n    model: Receipt,\n    url: 'receipts'\n})\n","// The function called from index.html\n$(document).ready(function() {\n    var app = require('application');\n\n    var locale = 'fr'; // default locale\n\n    // we'll need to tweak the server to allow this\n    $.ajax('cozy-locale.json', {\n        success: function(data) {\n            locale = data.locale\n            initializeLocale(locale);\n        },\n        error: function() {\n            initializeLocale(locale);\n        }\n    });\n\n    // let's define a function to initialize Polyglot\n    var initializeLocale = function(locale) {\n        var locales = {};\n        try {\n            locales = require('locales/' + locale);\n        }\n        catch(err) {\n            locales = require('locales/en');\n        }\n\n        var polyglot = new Polyglot();\n        // we give polyglot the data\n        polyglot.extend(locales);\n\n        // handy shortcut\n        window.t = polyglot.t.bind(polyglot);\n        app.initialize();\n    };\n});\n","module.exports = {\n    \"main title\": \"Welcome to MyInfo Nutritional\",\n    \"main description\": \"This application will help you track your shopping from nutrional point of view!\",\n}","module.exports = {\n    \"main title\": \"Bienvenue sur MesInfos Nutritionelles\",\n    \"main description\": \"Cette application vous permet de suivre vos achats en termes nutrionnels. !\",\n}","module.exports = Receipt = Backbone.Model.extend({\n\n})\n","var AppView = require('views/app_view');\nvar ReceiptCollection = require('collections/receipts');\n\nvar receipts = new ReceiptCollection();\nvar mainView;\n\nmodule.exports = Router = Backbone.Router.extend({\n\n    routes: {\n        '': 'info',\n        'info': 'info',\n        'stats': 'stats',\n        'coach': 'coach',\n        'control': 'control',\n        '*path' : 'main'\n    },\n\n    main: function() {\n        this.mainView = new AppView({\n            collection: receipts\n        });\n        this.mainView.render();\n    },\n    \n    info: function(){\n    \tif(!this.mainView)\n    \t\tthis.main();\n    \tthis.mainView.infoView();\n    },\n    \n    stats: function(){\n    \tif(!this.mainView)\n    \t\tthis.main();\n    \tthis.mainView.statsView();\n    },\n    \n    coach: function(){\n    \tif(!this.mainView)\n    \t\tthis.main();\n    \tthis.mainView.coachView();\n    },\n    \n    control: function(){\n    \tif(!this.mainView)\n    \t\tthis.main();\n    \tthis.mainView.controlView();\n    }\n});","module.exports = function anonymous(locals, attrs, escape, rethrow, merge) {\nattrs = attrs || jade.attrs; escape = escape || jade.escape; rethrow = rethrow || jade.rethrow; merge = merge || jade.merge;\nvar buf = [];\nwith (locals || {}) {\nvar interp;\nbuf.push('coach');\n}\nreturn buf.join(\"\");\n};","module.exports = function anonymous(locals, attrs, escape, rethrow, merge) {\nattrs = attrs || jade.attrs; escape = escape || jade.escape; rethrow = rethrow || jade.rethrow; merge = merge || jade.merge;\nvar buf = [];\nwith (locals || {}) {\nvar interp;\nbuf.push('<div class=\"col-md-9\"><H2> Ecran de controle</H2><p>Ce formulaire vous permet de lister les produits dont les informations nutritionnelles n\\'ont pas été saisies dans la base de données openfood facts.<br/>\\nles informations saisies ici seront envoyées à OpenFoodFacts pour réutilisation par d\\'autre personnes du panel MesInfos et plus généralement par tous les utilisateurs de la base de donnée ouverte Open food Facts.<br/>\\nMerci de saisir les données nutritionnelles avec soins.</p></div><div class=\"col-md-3 text-center\"><img src=\"openfoodfacts-logo-fr.png\"/></div><div class=\"col-md-12\"><form role=\"form\" action=\"postFoodfacts\" method=\"post\"><table class=\"table table-striped table-hover table-condensed\"><thead><th colspan=\"5\"><button type=\"submit\" class=\"btn btn-primary\">Envoyer les modifications</button></th></thead><thead><th class=\"col-md-2\">référence intermarché<br/>code bare</th><th class=\"col-md-1\">dernière date d\\'achat</th><th class=\"col-md-2\">nom de l\\'article</th><th class=\"col-md-1 text-center\">poid<br/>(Grammes)</th><th class=\"col-md-1 text-center\">calories <br/>(KJoules)</th><th class=\"col-md-1 text-center\">lipides <br/>(Grammes)</th><th class=\"col-md-1 text-center\">proteines <br/>(Grammes)</th><th class=\"col-md-1 text-center\">glucides <br/>(Grammes)</th></thead><tbody id=\"products-body\"></tbody><tfoot><td colspan=\"5\"><button type=\"submit\" class=\"btn btn-primary\">Envoyer les modifications</button></td></tfoot></table></form></div><script id=\"template-row\" type=\"text/html\"><tr><td style=\"vertical-align:middle\"> <table><tr><td><img src=\"http://drive.intermarche.com/ressources/images/produit/vignette/0<%= barcode %>.jpg\" width=\"53\" height=\"53\" class=\"image\"/></td><td><%= shop_label %><br/><%= barcode %></td></tr></table></td><td style=\"vertical-align:middle\"><%= new Date(last_update).toLocaleDateString() %></td><td><input name=\"changed_<%= barcode %>\" type=\"hidden\" value=\"false\"/><input name=\"name_<%= barcode %>\" type=\"text\" placeholder=\"Nom de l\\'article\" value=\"<%= name?name:\\'\\' %>\" class=\"form-control\"/></td><td><div class=\"input-group\"><input name=\"weight_<%= barcode %>\" type=\"text\" placeholder=\"poid\" value=\"<%= (typeof weight != \\'undefined\\')?weight:\\'\\' %>\" class=\"form-control\"/><span class=\"input-group-addon\">g</span></div></td><td><div class=\"input-group\"><input name=\"energy_<%= barcode %>\" type=\"text\" placeholder=\"energy\" value=\"<%= (typeof energy != \\'undefined\\')?energy:\\'\\' %>\" class=\"form-control\"/><span class=\"input-group-addon\">Kj</span></div></td><td><div class=\"input-group\"><input name=\"fat_<%= barcode %>\" type=\"text\" placeholder=\"lipides\" value=\"<%= (typeof fat != \\'undefined\\')?fat:\\'\\' %>\" class=\"form-control\"/><span class=\"input-group-addon\">g</span></div></td><td><div class=\"input-group\"><input name=\"proteins_<%= barcode %>\" type=\"text\" placeholder=\"protéines\" value=\"<%= (typeof proteins != \\'undefined\\')?proteins:\\'\\' %>\" class=\"form-control\"/><span class=\"input-group-addon\">g</span></div></td><td><div class=\"input-group\"><input name=\"carbohydrates_<%= barcode %>\" type=\"text\" placeholder=\"glucides\" value=\"<%= (typeof carbohydrates != \\'undefined\\')?carbohydrates:\\'\\' %>\" class=\"form-control\"/><span class=\"input-group-addon\">g</span></div></td></tr></script>');\n}\nreturn buf.join(\"\");\n};","module.exports = function anonymous(locals, attrs, escape, rethrow, merge) {\nattrs = attrs || jade.attrs; escape = escape || jade.escape; rethrow = rethrow || jade.rethrow; merge = merge || jade.merge;\nvar buf = [];\nwith (locals || {}) {\nvar interp;\nbuf.push('<div><script id=\"header\" type=\"text/html\"><div class=\"col-md-12\"><H2> Détail des achats du jour <%= new Date(day).toLocaleDateString() %></H2><p>Vous pouvez voir et corriger ici les info nutritionnelles associé au ticket de caisse selectionné.<br/>\\nles informations saisies ici seront envoyées à OpenFoodFacts pour réutilisation par d\\'autre personnes du panel MesInfos et plus généralement par tous les utilisateurs de la base de donnée ouverte Open food Facts.<br/>\\nMerci de saisir les données nutritionnelles avec soins.\\nLes statisitues seront mise à jour après correction.</p></div><div class=\"col-md-12\"><form role=\"form\" action=\"postFoodfacts\" method=\"post\"><table class=\"table table-striped table-hover table-condensed\"><thead><th colspan=\"5\"><button type=\"submit\" class=\"btn btn-primary\">Envoyer les modifications</button></th></thead><thead><th class=\"col-md-2\">référence intermarché<br/>code bare</th><th class=\"col-md-2\">nom de l\\'article</th><th class=\"col-md-1 text-center\">poid<br/>(Grammes)</th><th class=\"col-md-1 text-center\">calories <br/>(KJoules)</th><th class=\"col-md-1 text-center\">lipides <br/>(Grammes)</th><th class=\"col-md-1 text-center\">proteines <br/>(Grammes)</th><th class=\"col-md-1 text-center\">glucides <br/>(Grammes)</th></thead><tbody id=\"products-body\"></tbody><tfoot><td colspan=\"5\"><button type=\"submit\" class=\"btn btn-primary\">Envoyer les modifications</button></td></tfoot></table></form></div></script><script id=\"template-row\" type=\"text/html\"><tr><td style=\"vertical-align:middle\"> <table><tr><td><img src=\"http://drive.intermarche.com/ressources/images/produit/vignette/0<%= barcode %>.jpg\" width=\"53\" height=\"53\" class=\"image\"/></td><td><%= shop_label %><br/><%= barcode %></td></tr></table></td><td><input name=\"changed_<%= barcode %>\" type=\"hidden\" value=\"false\"/><input name=\"name_<%= barcode %>\" type=\"text\" placeholder=\"Nom de l\\'article\" value=\"<%= name?name:\\'\\' %>\" class=\"form-control\"/></td><td><div class=\"input-group\"><input name=\"weight_<%= barcode %>\" type=\"text\" placeholder=\"poid\" value=\"<%= (typeof weight != \\'undefined\\')?weight:\\'\\' %>\" class=\"form-control\"/><span class=\"input-group-addon\">g</span></div></td><td><div class=\"input-group\"><input name=\"energy_<%= barcode %>\" type=\"text\" placeholder=\"energy\" value=\"<%= (typeof energy != \\'undefined\\')?energy:\\'\\' %>\" class=\"form-control\"/><span class=\"input-group-addon\">Kj</span></div></td><td><div class=\"input-group\"><input name=\"fat_<%= barcode %>\" type=\"text\" placeholder=\"lipides\" value=\"<%= (typeof fat != \\'undefined\\')?fat:\\'\\' %>\" class=\"form-control\"/><span class=\"input-group-addon\">g</span></div></td><td><div class=\"input-group\"><input name=\"proteins_<%= barcode %>\" type=\"text\" placeholder=\"protéines\" value=\"<%= (typeof proteins != \\'undefined\\')?proteins:\\'\\' %>\" class=\"form-control\"/><span class=\"input-group-addon\">g</span></div></td><td><div class=\"input-group\"><input name=\"carbohydrates_<%= barcode %>\" type=\"text\" placeholder=\"glucides\" value=\"<%= (typeof carbohydrates != \\'undefined\\')?carbohydrates:\\'\\' %>\" class=\"form-control\"/><span class=\"input-group-addon\">g</span></div></td></tr></script></div>');\n}\nreturn buf.join(\"\");\n};","module.exports = function anonymous(locals, attrs, escape, rethrow, merge) {\nattrs = attrs || jade.attrs; escape = escape || jade.escape; rethrow = rethrow || jade.rethrow; merge = merge || jade.merge;\nvar buf = [];\nwith (locals || {}) {\nvar interp;\nbuf.push('<head><script src=\"Chart.js\"> </script></head><nav role=\"navigation\" class=\"navbar navbar-default navbar-fixed-top\"><div class=\"container\"><div class=\"navbar-header\"><button type=\"button\" data-toggle=\"collapse\" data-target=\".navbar-collapse\" class=\"navbar-toggle\"><span class=\"icon-bar\"></span><span class=\"icon-bar\"></span><span class=\"icon-bar\"></span></button><a href=\"#info\" class=\"navbar-brand\">MesInfos Nutritionelles</a></div><div class=\"navbar-collapse collapse\"><ul class=\"nav navbar-nav\"><li><a href=\"#stats\"> Mes Statistiques</a></li><li><a href=\"#control\"> Vérifications</a></li><li class=\"dropdown\"><a href=\"#\" data-toggle=\"dropdown\" class=\"dropdown-toggle\">A Propos<ul class=\"dropdown-menu\"><li> <a href=\"#\">&copy; 2013 Lookal</a></li><li> <a href=\"mail:pdelorme@lookal.fr\">contact: pdelorme@lookal.fr</a></li><li> <a href=\"#\">Merci à la Fing et à OpenFoodFacts pour leur assistance.<br/>\\nLongue vie à mes infos</a></li></ul></a></li></ul></div></div></nav><div class=\"container\">                      <br/><br/><br/><div id=\"tab-content\"></div></div>');\n}\nreturn buf.join(\"\");\n};","module.exports = function anonymous(locals, attrs, escape, rethrow, merge) {\nattrs = attrs || jade.attrs; escape = escape || jade.escape; rethrow = rethrow || jade.rethrow; merge = merge || jade.merge;\nvar buf = [];\nwith (locals || {}) {\nvar interp;\nbuf.push('<h1>');\nvar __val__ = t('main title')\nbuf.push(escape(null == __val__ ? \"\" : __val__));\nbuf.push('</h1><p>');\nvar __val__ = t('main description')\nbuf.push(escape(null == __val__ ? \"\" : __val__));\nbuf.push('</p>');\n}\nreturn buf.join(\"\");\n};","module.exports = function anonymous(locals, attrs, escape, rethrow, merge) {\nattrs = attrs || jade.attrs; escape = escape || jade.escape; rethrow = rethrow || jade.rethrow; merge = merge || jade.merge;\nvar buf = [];\nwith (locals || {}) {\nvar interp;\nbuf.push('<div class=\"col-md-9\"><H2> Statistiques d\\'achat nutritionnelles</H2><p>Ce diagramme montre les calories, protéines, lipides et glucides par date d\\'acaht et éttalé dans le temps.<br/>\\nen cliquant sur une date, vous pourez voir la liste des achats du jour et cérifier/compléter les informations nutritionnelles de chaques produits afin de corriger votre diagramme.</p></div><div class=\"col-md-3 text-center\"><img src=\"openfoodfacts-logo-fr.png\"/></div><div id=\"chartContainer\" class=\"col-md-12 chart\"><div id=\"chartEnergyContainer\" class=\"col-md-6 chart\"></div><div id=\"chartNutritionContainer\" class=\"col-md-6 chart\"></div></div><div id=\"dataContainer\"></div>');\n}\nreturn buf.join(\"\");\n};","var StatsView = require('./info_view');\nvar StatsView = require('./stats_view');\nvar CoachView = require('./coach_view');\nvar ControlView = require('./control_view');\nvar DataView = require('./data_view');\n\nmodule.exports = AppView = Backbone.View.extend({\n\n    el: 'body',\n    template: require('../templates/home'),\n    events: {\n    },\n\n    // initialize is automatically called once after the view is constructed\n    initialize: function() {\n        // this.listenTo(this.collection, \"add\", this.onBookmarkAdded);\n    },\n\n    render: function() {\n\n        // we render the template\n        this.$el.html(this.template());\n\n        // fetch the receipts from the database\n        this.collection.fetch();\n    },\n\n    infoView: function(event) {\n        // render the stats view\n        infoView = new InfoView({\n            model: this.collection\n        });\n        infoView.render();\n        this.$el.find('#tab-content').html(infoView.$el);\n    },\n    \n    statsView: function(event) {\n      // render the stats view\n      statsView = new StatsView({\n          model: this.collection\n      });\n      statsView.render();\n      this.$el.find('#tab-content').html(statsView.$el);\n    },\n    \n    coachView:function(event){\n\t\tcoachView = new CoachView({\n\t        model: this.collection\n\t    });\n\t    coachView.render();\n\t    this.$el.find('#tab-content').html(coachView.$el);\n    },\n    \n    controlView:function(event){\n\t\tcontrolView = new ControlView({\n\t        model: this.collection\n\t    });\n\t    controlView.render();\n\t    this.$el.find('#tab-content').html(controlView.$el);\n    }\n});","//var SectionView = require('./section');\nvar ReceiptCollection = require('../collections/receipts');\n\nmodule.exports = StatsView = Backbone.View.extend({\n\n    tagName: 'div',\n    template: require('../templates/coach'),\n    events: {\n        //\"click .receipt\": \"toggleSections\",    \n        //\"click .toggle\": \"toggleSectionsNoDefault\"    \n    },\n\n    initialize: function() {\n        // this.collection = new ReceiptCollection([], { receiptId: this.model.attributes.receiptId });\n        \n    },\n\n    render: function() {\n        this.$el.html(this.template({\n            receipt: this.model.toJSON()\n        }));\n    },\n    \n});\n\n","//var SectionView = require('./section');\nvar ReceiptCollection = require('../collections/receipts');\n\nmodule.exports = ControlView = Backbone.View.extend({\n\n    tagName: 'div',\n    template: require('../templates/control'),\n    events: {\n    \t\"submit form\":\"postData\",\n    \t\"change input.form-control\" : \"formChange\"\n        //\"click .receipt\": \"toggleSections\",    \n        //\"click .toggle\": \"toggleSectionsNoDefault\"    \n    },\n\n    initialize: function() {\n        // this.collection = new ReceiptCollection([], { receiptId: this.model.attributes.receiptId });\n        \n    },\n\n    render: function() {\n        this.$el.html(this.template());\n        this.getData();\n    },\n    \n    getData: function(){\n    \t// asks server for product without infos.\n    \tvar that = this;\n    \tvar productBody = this.$el.find(\"#products-body\");\n    \tproductBody.html(\"\");\n    \tvar productRowTemplate = _.template(this.$el.find(\"#template-row\").html());\n    \t$.getJSON('invalidProducts', function(data) {\n        \tproductBody.html(\"\");\n    \t\t$.each(data, function(key, val) {\n    \t\t\tproductBody.append(productRowTemplate(val));\n    \t\t});\n    \t});\n    },\n    \n    postData: function(e){\n    \te.preventDefault();\n    \tvar formData = $(\"form\").serialize();\n    \tvar productBody = this.$el.find(\"#products-body\");\n    \tvar productRowTemplate = _.template(this.$el.find(\"#template-row\").html());\n    \tvar that = this;\n    \t\n    \t$.ajax({\n\t\t  type: \"POST\",\n\t\t  url: 'postFoodfacts',\n\t\t  data: formData,\n\t\t  dataType: \"json\",\n          beforeSend: function(){$(\"#modal-overlay\").show();},\n          complete: function(){$(\"#modal-overlay\").hide();},\n\t\t  success: function(data) {\n\t        \tthat.getData();\n\t    \t},\n\t\t});\n    \t\n//    \t$.postJSON('postFoodfacts', formData, function(data) {\n//        \tproductBody.html(\"\");\n//    \t\t$.each(data, function(key, val) {\n//    \t\t\tproductBody.append(productRowTemplate(val));\n//    \t\t});\n//    \t});\n    },\n    formChange: function(e){\n    \tvar id = e.target.name.split('_')[1];\n    \t$(\"[name='changed_\"+id+\"']\").val(\"true\");\n    }\n    \n});\n\n","//var SectionView = require('./section');\nvar ReceiptCollection = require('../collections/receipts');\n\nmodule.exports = DataView = Backbone.View.extend({\n\n    tagName: 'div',\n    template: require('../templates/data'),\n    events: {\n    \t\"submit form\":\"postData\",\n    \t\"change input.form-control\" : \"formChange\"\n        //\"click .receipt\": \"toggleSections\",    \n        //\"click .toggle\": \"toggleSectionsNoDefault\"    \n    },\n\n    initialize: function() {\n        // this.collection = new ReceiptCollection([], { receiptId: this.model.attributes.receiptId });\n        this.day = this.options.day;\n        this.statsView = this.options.statsView;\n    },\n\n    render: function() {\n    \tvar headerTemplate = _.template($(this.template()).find(\"#header\").html());\n        var html = headerTemplate({day:this.day});\n    \tthis.$el.html(html);\n        this.getData();\n    },\n    \n    getData: function(){\n    \t// asks server for product without infos.\n    \tvar that = this;\n    \tvar productBody = this.$el.find(\"#products-body\");\n    \tvar productRowTemplate = _.template($(this.template()).find(\"#template-row\").html());\n    \t$.getJSON('dayFacts?day='+this.day, function(data) {\n        \tproductBody.html(\"\");\n    \t\t$.each(data, function(key, val) {\n    \t\t\tproductBody.append(productRowTemplate(val));\n    \t\t});\n    \t});\n    },\n    \n    postData: function(e){\n    \te.preventDefault();\n    \tvar formData = $(\"form\").serialize();\n    \tvar that = this;\n    \t\n    \t$.ajax({\n\t\t  type: \"POST\",\n\t\t  url: 'postFoodfacts',\n\t\t  data: formData,\n\t\t  //dataType: \"json\",\n          beforeSend: function(){$(\"#modal-overlay\").show();},\n          complete: function(){ $(\"#modal-overlay\").hide();},\n\t\t  success: function(data) {\n\t\t\t  that.getData();\n\t\t\t  that.statsView.updateChart();\n\t    \t},\n\t\t});\n    \t\n//    \t$.postJSON('postFoodfacts', formData, function(data) {\n//        \tproductBody.html(\"\");\n//    \t\t$.each(data, function(key, val) {\n//    \t\t\tproductBody.append(productRowTemplate(val));\n//    \t\t});\n//    \t});\n    },\n    formChange: function(e){\n    \tvar id = e.target.name.split('_')[1];\n    \t$(\"[name='changed_\"+id+\"']\").val(\"true\");\n    }\n    \n});\n\n","//var SectionView = require('./section');\nvar ReceiptCollection = require('../collections/receipts');\n\nmodule.exports = InfoView = Backbone.View.extend({\n\n    tagName: 'div',\n    template: require('../templates/info'),\n    events: {\n        //\"click .receipt\": \"toggleSections\",    \n        //\"click .toggle\": \"toggleSectionsNoDefault\"    \n    },\n\n    initialize: function() {\n        // this.collection = new ReceiptCollection([], { receiptId: this.model.attributes.receiptId });\n        \n    },\n\n    render: function() {\n        this.$el.html(this.template({\n            receipt: this.model.toJSON()\n        }));\n    },\n    \n});\n\n","//var SectionView = require('./section');\nvar ReceiptCollection = require('../collections/receipts');\n\nmodule.exports = StatsView = Backbone.View.extend({\n\n    tagName: 'div',\n    template: require('../templates/stats'),\n    events: {\n        //\"click .receipt\": \"toggleSections\",    \n        //\"click .toggle\": \"toggleSectionsNoDefault\"    \n    },\n\n    initialize: function() {\n    },\n\n    render: function() {\n        this.$el.html(this.template({\n            receipt: this.model.toJSON()\n        }));\n        var that = this;\n        // async to allow proper refresh.\n        setTimeout(function(){\n        \tthat.updateChart();\n        },0);\n    },\n    \n    updateChart: function (callback) {\n    \tvar energyPoints = [];\n    \tvar fatPoints = [];\n    \tvar proteinsPoints = [];\n    \tvar carbohydratesPoints = [];\n    \tvar averageEnergyPoints = [];\n    \tvar averageFatPoints = [];\n    \tvar averageProteinsPoints = [];\n    \tvar averageCarbohydratesPoints = [];\n    \tvar chartEnergyContainer = this.$el.find(\"#chartEnergyContainer\");\n    \tvar chartNutritionContainer = this.$el.find(\"#chartNutritionContainer\");\n    \tvar that = this;\n\t\tvar chartEnergy = new CanvasJS.Chart(chartEnergyContainer,{\n\t\t\tzoomEnabled: true,\n\t\t    panEnabled: true, \n\t\t\ttitle:{\n\t\t\t\ttext: \"Energie\",\n\t\t\t\tfontSize:15,\n\t\t\t\tfontFamily:\"arial\",\n\t\t\t\tfontWeight:\"normal\",\n\t\t\t\tpadding:0,\n\t\t\t\tmaring:0,\n\t\t\t\tverticalAlign: \"top\", // \"top\", \"center\", \"bottom\"\n\t\t        horizontalAlign: \"left\" // \"left\", \"right\", \"center\"\n\t\t        \t\n\t\t\t}, \n\t\t\taxisX:{\n\t\t\t   //labelAngle: 50,\n\t\t\t   valueFormatString: \"D MMM\",\n\t\t\t   labelFontFamily:\"arial\",\n\t\t\t   labelFontSize:1,\n\t\t\t   lineThickness:0,\n\t\t\t   gridThickness:0,\n\t\t\t   tickThickness:0,\n\t\t\t   interval:1000,\n\t\t\t   intervalType:\"week\"\n\t\t\t},\n\t\t\taxisY:{\n\t\t\t\t//title:\"Kilo Joules : Grammes\",\n\t\t\t\tvalueFormatString: \"0.##\",\n\t\t\t\tlabelFontSize:1,\n\t\t\t\t//labelFontColor:000,\n\t\t\t\tlineThickness:0,\n\t\t\t\tgridThickness:0,\n\t\t\t\ttickThickness:0,\n\t\t\t\tminimum:0,\n\t\t\t\tinterval:1000\n\t\t\t},\n\t\t\tlegend:{\n\t\t\t\tverticalAlign: \"bottom\",\n\t\t\t\thorizontalAlign: \"center\",\n\t\t\t\tfontSize: 15,\n\t\t\t\tfontFamily: \"arial\",\n\t\t\t\tfontColor:\"gray\"\n\t\t\t},\n\t\t\tdata: [\n\t\t\t       // energy\n\t\t\t       {\n\t\t\t    \t   type: \"area\",\n\t\t\t    \t   color: \"rgba(54,158,173,.3)\",\n\t\t\t    \t   showInLegend: true,\n\t\t\t    \t   name:\"energie/jour (Kj)\",\n\t\t\t    \t   dataPoints: averageEnergyPoints,\n\t\t\t    \t   markerType:\"none\",\n\t\t\t    \t   //markerColor:\"red\",\n\t\t\t       },\n\t\t\t       {\n\t\t\t    \t   type: \"column\",\n\t\t\t    \t   color: \"rgba(54,158,173,1)\",\n\t\t\t    \t   showInLegend: true,\n\t\t\t    \t   name:\"energie (Kj)\",\n\t\t\t    \t   width:50,\n\t\t\t    \t   click: function(e){ \n\t\t\t    \t\t   that.showTicketData(e.dataPoint.x);\n\t\t\t    \t   },\n\t\t\t    \t   dataPoints: energyPoints,\n\t\t\t    \t   indexLabelPlacement:\"outside\",\n\t\t\t    \t   indexLabelOrientation:\"vertical\",\n\t\t\t    \t   indexLabelFontSize:15,\n\t\t\t    \t   indexLabelFontFamily: \"arial\",\n\t\t\t    \t   indexLabel: \"{x}\"\n\t\t\t       }\n\t\t\t ]\n\t\t});\n\t\tvar chartNutrition = new CanvasJS.Chart(chartNutritionContainer,{\n\t\t\tzoomEnabled: true,\n\t\t    panEnabled: true, \n\t\t    toolTip: {\n\t\t        shared: \"true\"  //disable here. \n\t\t      },\n\t\t\ttitle:{\n\t\t\t\ttext: \"Composition Nutritionnelle\",\n\t\t\t\tfontFamily:\"arial\",\n\t\t\t\tfontSize:15,\n\t\t\t\tfontWeight:\"normal\",\n\t\t\t\tpadding:0,\n\t\t\t\tmaring:0,\n\t\t\t\tverticalAlign: \"top\", // \"top\", \"center\", \"bottom\"\n\t\t        horizontalAlign: \"left\" // \"left\", \"right\", \"center\"\n\t\t        \t\n\t\t\t}, \n\t\t\taxisX:{\n\t\t\t   labelAngle: 50,\n\t\t\t   valueFormatString: \"D MMM\",\n\t\t\t   labelFontFamily:\"arial\",\n\t\t\t   labelFontSize:1,\n\t\t\t   labelFontWeight:\"normal\",\n\t\t\t   lineThickness:0,\n\t\t\t   gridThickness:0,\n\t\t\t   tickThickness:1,\n\t\t\t   interval:1000,\n\t\t\t   intervalType:\"week\"\n\t\t\t},\n\t\t\taxisY:{\n\t\t\t\t//title:\"Kilo Joules : Grammes\",\n\t\t\t\tvalueFormatString: \"0.##\",\n\t\t\t\tlabelFontSize:1,\n\t\t\t\tlineThickness:0,\n\t\t\t\tgridThickness:0,\n\t\t\t\ttickThickness:0,\n\t\t\t\tminimum:0,\n\t\t\t\tinterval:1000\n\t\t\t},\n\t\t\tlegend:{\n\t\t\t\tverticalAlign: \"bottom\",\n\t\t\t\thorizontalAlign: \"center\",\n\t\t\t\tfontSize: 15,\n\t\t\t\tfontFamily: \"arial\",\n\t\t\t\tfontColor:\"gray\"\n\t\t\t},\n\t\t\tdata: [\n\t\t\t       // fat\n\t\t\t       {\n\t\t\t    \t   type: \"stackedColumn\",\n\t\t\t    \t   color: \"rgba(8,15,173,.7)\",\n\t\t\t    \t   showInLegend: true,\n\t\t\t    \t   name:\"lipides (g)\",\n\t\t\t    \t   click: function(e){ \n\t\t\t    \t\t   that.showTicketData(e.dataPoint.x);\n\t\t\t    \t   },\n\t\t\t    \t   dataPoints: fatPoints,\n\t\t\t    \t   indexLabelPlacement:\"outside\",\n\t\t\t    \t   indexLabelAngle:50,\n\t\t\t    \t   //indexLabel: \"{y}\"\n\t\t\t       },\n\t\t\t       {\n\t\t\t    \t   type: \"stackedArea\",\n\t\t\t    \t   color: \"rgba(8,15,173,.3)\",\n\t\t\t    \t   //showInLegend: true,\n\t\t\t    \t   name:\"lipides/jour (g)\",\n\t\t\t    \t   dataPoints: averageFatPoints,\n\t\t\t    \t   markerType:\"none\"\n\t\t\t       },\n\t\t\t       // proteins\n\t\t\t       {\n\t\t\t    \t   type: \"stackedColumn\",\n\t\t\t    \t   color: \"rgba(54,58,73,.7)\",\n\t\t\t    \t   showInLegend: true,\n\t\t\t    \t   name:\"protéines (g)\",\n\t\t\t    \t   click: function(e){ \n\t\t\t    \t\t   that.showTicketData(e.dataPoint.x);\n\t\t\t    \t   },\n\t\t\t    \t   dataPoints: proteinsPoints,\n\t\t\t    \t   indexLabelPlacement:\"outside\",\n\t\t\t    \t   indexLabelAngle:50,\n\t\t\t    \t   //indexLabel: \"{y}\"\n\t\t\t       },\n\t\t\t       {\n\t\t\t    \t   type: \"stackedArea\",\n\t\t\t    \t   color: \"rgba(54,58,73,.3)\",\n\t\t\t    \t   //showInLegend: true,\n\t\t\t    \t   name:\"protéines/jour (g)\",\n\t\t\t    \t   dataPoints: averageProteinsPoints,\n\t\t\t    \t   markerType:\"none\"\n\t\t\t       },\n\t\t\t       // carbohydrates\n\t\t\t       {\n\t\t\t    \t   type: \"stackedColumn\",\n\t\t\t    \t   color: \"rgba(54,158,73,.7)\",\n\t\t\t    \t   showInLegend: true,\n\t\t\t    \t   name:\"glucides (g)\",\n\t\t\t    \t   click: function(e){ \n\t\t\t    \t\t   that.showTicketData(e.dataPoint.x);\n\t\t\t    \t   },\n\t\t\t    \t   dataPoints: carbohydratesPoints,\n\t\t\t    \t   indexLabelPlacement:\"outside\",\n\t\t\t    \t   indexLabelOrientation:\"vertical\",\n\t\t\t    \t   indexLabelFontSize:15,\n\t\t\t    \t   indexLabelFontFamily: \"arial\",\n\t\t\t    \t   indexLabel: \"{x}\"\n\t\t\t       },\n\t\t\t       {\n\t\t\t    \t   type: \"stackedArea\",\n\t\t\t    \t   color: \"rgba(54,158,73,.3)\",\n\t\t\t    \t   //showInLegend: true,\n\t\t\t    \t   name:\"glucides/jour (g)\",\n\t\t\t    \t   dataPoints: averageCarbohydratesPoints,\n\t\t\t    \t   markerType:\"none\"\n\t\t\t       }\n\t\t\t ]\n\t\t});\n\t\tthis.chartEnergy = chartEnergy;\n\t\tthis.chartNutrition = chartNutrition;\n\t\t// empty energyPoints.\n    \tenergyPoints.length = 0;\n    \taverageEnergyPoints.length = 0;\n    \tfatPoints.length = 0;\n    \taverageFatPoints.length = 0;\n    \tproteinsPoints.length = 0;\n    \taverageProteinsPoints.length = 0;\n    \tcarbohydratesPoints.length = 0;\n    \taverageCarbohydratesPoints.length = 0;\n\t\t// build stats.\n\t\t$.getJSON('receiptStats', function(data) {\n\t\t\tvar receiptStats = data;\n\t\t\tvar prevDay;\n\t\t\tvar prevEnergy;\n\t\t\tvar prevFat;\n\t\t\tvar prevProteins;\n\t\t\tvar prevCarbohydrates;\n\t\t\t$.each(receiptStats, function(key, val) {\n\t\t\t\tvar date = new Date(val.timestamp);\n\t\t\t\tvar day = new Date(date.getFullYear(), date.getMonth(), date.getDate());\n\t\t\t\tvar energy        = val.energy;\n\t\t\t\tvar fat           = val.fat;\n\t\t\t\tvar proteins      = val.proteins;\n\t\t\t\tvar carbohydrates = val.carbohydrates;\n\t\t\t\tif(prevDay){\n\t\t\t\t\tdays = ((day.getTime()-prevDay.getTime())/(1000*60*60*24));\n\t\t\t\t\tif(days==0) {\n\t\t\t\t\t\tlastEnergyPoint = energyPoints.pop();\n\t\t\t\t\t\tenergy = lastEnergyPoint.y + energy;\n\t\t\t\t\t\t\n\t\t\t\t\t\tlastFatPoint = fatPoints.pop();\n\t\t\t\t\t\tfat = lastFatPoint.y + fat;\n\t\t\t\t\t\t\n\t\t\t\t\t\tlastProteinsPoint = proteinsPoints.pop();\n\t\t\t\t\t\tproteins = lastProteinsPoint.y + proteins;\n\t\t\t\t\t\t\n\t\t\t\t\t\tlastCarbohydratesPoint = carbohydratesPoints.pop();\n\t\t\t\t\t\tcarbohydrates = lastCarbohydratesPoint.y + carbohydrates;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tmeanEnergy = Math.round(prevEnergy / days * 100) / 100;\n\t\t\t\t\t\tmeanFat = Math.round(prevFat / days * 100) / 100;\n\t\t\t\t\t\tmeanProteins = Math.round(prevProteins / days * 100) / 100;\n\t\t\t\t\t\tmeanCarbohydrates = Math.round(prevCarbohydrates / days * 100) / 100;\n\n\t\t\t\t\t\t//for(var theTime = prevDay.getTime(); theTime<day.getTime(); theTime+=(1000*60*60*24)){\n\t\t\t\t\t\t\ttheTime=prevDay.getTime();\n\t\t\t\t\t\t\taverageEnergyPoints.push({x:new Date(theTime), y:meanEnergy});\n\t\t\t\t\t\t\taverageFatPoints.push({x:new Date(theTime), y:meanFat});\n\t\t\t\t\t\t\taverageProteinsPoints.push({x:new Date(theTime), y:meanProteins});\n\t\t\t\t\t\t\taverageCarbohydratesPoints.push({x:new Date(theTime), y:meanCarbohydrates});\n\t\t\t\t\t\t\ttheTime=day.getTime();\n\t\t\t\t\t\t\taverageEnergyPoints.push({x:new Date(theTime), y:meanEnergy});\n\t\t\t\t\t\t\taverageFatPoints.push({x:new Date(theTime), y:meanFat});\n\t\t\t\t\t\t\taverageProteinsPoints.push({x:new Date(theTime), y:meanProteins});\n\t\t\t\t\t\t\taverageCarbohydratesPoints.push({x:new Date(theTime), y:meanCarbohydrates});\n\t\t\t\t\t\t//}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tprevDay           = day;\n\t\t\t\tprevEnergy        = energy;\n\t\t\t\tprevFat           = fat;\n\t\t\t\tprevProteins      = proteins;\n\t\t\t\tprevCarbohydrates = carbohydrates;\n\t\t\t\tconsole.log(day, energy, fat, proteins, carbohydrates);\n\t\t\t\tenergyPoints.push({x:day, y: Math.round(energy*100)/100});\n\t\t\t\tfatPoints.push({x:day, y: Math.round(fat*100)/100});\n\t\t\t\tproteinsPoints.push({x:day, y: Math.round(proteins*100)/100});\n\t\t\t\tcarbohydratesPoints.push({x:day, y: Math.round(carbohydrates*100)/100});\n\t\t\t});\n\t\t\tconsole.log(\"nb points:\",energyPoints.length);\n\t\t\t\n\t\t\t// refresh view.\n\t\t\tchartEnergy.render();\n\t\t\tchartNutrition.render();\n\t\t\tif(callback)\n\t\t\t\tcallback();\n\t\t});\n\t},\n    showTicketData : function(timestamp){\n    \tvar date = new Date(timestamp);\n\t\tvar day = new Date(date.getFullYear(), date.getMonth(), date.getDate());\n    \tdataView = new DataView({\n    \t\tstatsView:this,\n    \t\tday:day\n    \t});\n        dataView.render();\n        this.$el.find('#dataContainer').html(dataView.$el);\n    }\n\n});\n\n"]}