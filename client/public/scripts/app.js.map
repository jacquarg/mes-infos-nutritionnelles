{"version":3,"file":"public/scripts/app.js","sources":["app/application.js","app/collections/receipts.js","app/initialize.js","app/locales/en.js","app/locales/fr.js","app/models/receipt.js","app/router.js","app/templates/coach.jade","app/templates/control.jade","app/templates/home.jade","app/templates/stats.jade","app/views/app_view.js","app/views/coach_view.js","app/views/control_view.js","app/views/stats_view.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AALA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AApCA;;A,CCAA;;AACA;AACA;AACA;AAHA;;A,CCAA;;AACA;AACA;AACA;AAHA;;A,CCAA;;AACA;AACA;AACA;AAHA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAxCA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAhBA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAdA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AApDA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAzBA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AArjHA;;A","sourcesContent":["module.exports = {\n\n    initialize: function() {\n        var Router = require('router');\n        this.router = new Router();\n        Backbone.history.start();\n    }\n};","Receipt = require('../models/receipt');\nmodule.exports = ReceiptDetails = Backbone.Collection.extend({\n    model: Receipt,\n    url: 'receipts'\n})\n","// The function called from index.html\n$(document).ready(function() {\n    var app = require('application');\n\n    var locale = 'fr'; // default locale\n\n    // we'll need to tweak the server to allow this\n    $.ajax('cozy-locale.json', {\n        success: function(data) {\n            locale = data.locale\n            initializeLocale(locale);\n        },\n        error: function() {\n            initializeLocale(locale);\n        }\n    });\n\n    // let's define a function to initialize Polyglot\n    var initializeLocale = function(locale) {\n        var locales = {};\n        try {\n            locales = require('locales/' + locale);\n        }\n        catch(err) {\n            locales = require('locales/en');\n        }\n\n        var polyglot = new Polyglot();\n        // we give polyglot the data\n        polyglot.extend(locales);\n\n        // handy shortcut\n        window.t = polyglot.t.bind(polyglot);\n        app.initialize();\n    };\n});\n","module.exports = {\n    \"main title\": \"Welcome to MyInfo Nutritional\",\n    \"main description\": \"This application will help you track your shopping from nutrional point of view!\",\n}","module.exports = {\n    \"main title\": \"Bienvenue sur MesInfos Nutritionelles\",\n    \"main description\": \"Cette application vous permet de suivre vos achats en termes nutrionnels. !\",\n}","module.exports = Receipt = Backbone.Model.extend({\n\n})\n","var AppView = require('views/app_view');\nvar ReceiptCollection = require('collections/receipts');\n\nvar receipts = new ReceiptCollection();\nvar mainView;\n\nmodule.exports = Router = Backbone.Router.extend({\n\n    routes: {\n        '': 'main',\n        'stats': 'stats',\n        'coach': 'coach',\n        'control': 'control',\n        '*path' : 'main'\n    },\n\n    main: function() {\n        this.mainView = new AppView({\n            collection: receipts\n        });\n        this.mainView.render();\n    },\n    \n    stats: function(){\n    \tif(!this.mainView)\n    \t\tthis.main();\n    \tthis.mainView.statsView();\n    },\n    \n    coach: function(){\n    \tif(!this.mainView)\n    \t\tthis.main();\n    \tthis.mainView.coachView();\n    },\n    \n    control: function(){\n    \tif(!this.mainView)\n    \t\tthis.main();\n    \tthis.mainView.controlView();\n    }\n});","module.exports = function anonymous(locals, attrs, escape, rethrow, merge) {\nattrs = attrs || jade.attrs; escape = escape || jade.escape; rethrow = rethrow || jade.rethrow; merge = merge || jade.merge;\nvar buf = [];\nwith (locals || {}) {\nvar interp;\nbuf.push('Hello coach');\n}\nreturn buf.join(\"\");\n};","module.exports = function anonymous(locals, attrs, escape, rethrow, merge) {\nattrs = attrs || jade.attrs; escape = escape || jade.escape; rethrow = rethrow || jade.rethrow; merge = merge || jade.merge;\nvar buf = [];\nwith (locals || {}) {\nvar interp;\nbuf.push('<div class=\"col-md-9\"><H2> Ecran de controle</H2><p>Ce formulaire vous permet de lister les produits dont les informations nutritionnelles n\\'ont pas été saisies dans la base de données openfood facts.<br/>\\nles informations saisies ici seront envoyées à OpenFoodFacts pour réutilisation par d\\'autre personnes du panel MesInfos et plus généralement par tous les utilisateurs de la base de donnée ouverte Open food Facts.<br/>\\nMerci de saisir les données nutritionnelles avec soins.</p></div><div class=\"col-md-3 text-center\"><img src=\"openfoodfacts-logo-fr.png\"/></div><div class=\"col-md-12\"><form role=\"form\" action=\"postFoodfacts\" method=\"post\"><table class=\"table table-striped table-hover table-condensed\"><thead><th class=\"col-md-2\">référence intermarché<br/>code bare</th><th class=\"col-md-1\">dernière date d\\'achat</th><th class=\"col-md-3\">nom de l\\'article</th><th class=\"col-md-1 text-center\">poid <br/>(en grammes)</th><th class=\"col-md-1 text-center\">calories <br/>(en KJoules)</th></thead><tbody id=\"products-body\"><tr><td style=\"vertical-align:middle\">Kiri 500G x6 portions 75G</td><td style=\"vertical-align:middle\">25/12/1969</td><td><input type=\"text\" placeholder=\"Nom de l\\'article\" class=\"form-control\"/></td><td><input type=\"text\" placeholder=\"Grammes\" class=\"form-control\"/></td><td><input type=\"text\" placeholder=\"Kilo Joules\" class=\"form-control\"/></td></tr></tbody><tfoot><td colspan=\"5\"> merci pour vos données</td></tfoot></table><button type=\"submit\" class=\"btn btn-primary\">Envoyer les modifications</button></form></div><script id=\"template-row\" type=\"text/html\"><tr>');\n var barcode = \"<%= barcode %>\"\nbuf.push('<td style=\"vertical-align:middle\"><%= shop_label %><br/><%= barcode %></td><td style=\"vertical-align:middle\"><%= last_update %></td><td><input');\nbuf.push(attrs({ 'name':(\"name_\" + (barcode) + \"\"), 'type':(\"text\"), 'placeholder':(\"Nom de l'article\"), \"class\": ('form-control') }, {\"name\":false,\"type\":true,\"placeholder\":true}));\nbuf.push('/></td><td><input');\nbuf.push(attrs({ 'name':(\"weight_\" + (barcode) + \"\"), 'type':(\"text\"), 'placeholder':(\"Grammes\"), \"class\": ('form-control') }, {\"name\":false,\"type\":true,\"placeholder\":true}));\nbuf.push('/></td><td><input');\nbuf.push(attrs({ 'name':(\"energy_\" + (barcode) + \"\"), 'type':(\"text\"), 'placeholder':(\"Kilo Joules\"), \"class\": ('form-control') }, {\"name\":false,\"type\":true,\"placeholder\":true}));\nbuf.push('/></td></tr></script>');\n}\nreturn buf.join(\"\");\n};","module.exports = function anonymous(locals, attrs, escape, rethrow, merge) {\nattrs = attrs || jade.attrs; escape = escape || jade.escape; rethrow = rethrow || jade.rethrow; merge = merge || jade.merge;\nvar buf = [];\nwith (locals || {}) {\nvar interp;\nbuf.push('<head><script src=\"Chart.js\"> </script></head><nav role=\"navigation\" class=\"navbar navbar-default navbar-fixed-top\"><div class=\"container\"><div class=\"navbar-header\"><button type=\"button\" data-toggle=\"collapse\" data-target=\".navbar-collapse\" class=\"navbar-toggle\"><span class=\"icon-bar\"></span><span class=\"icon-bar\"></span><span class=\"icon-bar\"></span></button><a href=\"#\" class=\"navbar-brand\">MesInfos Nutritionelles</a></div><div class=\"navbar-collapse collapse\"><ul class=\"nav navbar-nav\"><li><a href=\"#stats\"> Statistiques</a></li><li><a href=\"#coach\"> Analyse</a></li><li><a href=\"#control\"> Vérifications</a></li><li class=\"dropdown\"><a href=\"#\" data-toggle=\"dropdown\" class=\"dropdown-toggle\">A Propos<ul class=\"dropdown-menu\"><li> <a href=\"#\">&copy; 2013 Lookal</a></li><li> <a href=\"mail:pdelorme@lookal.fr\">contact: pdelorme@lookal.fr</a></li><li> <a href=\"#\">Merci à la Fing et à OpenFoodFacts pour leur assistance.<br/>\\nLongue vie à mes infos</a></li></ul></a></li></ul></div></div></nav><div class=\"container\">                      <br/><br/><br/><h1>');\nvar __val__ = t('main title')\nbuf.push(escape(null == __val__ ? \"\" : __val__));\nbuf.push('</h1><p>');\nvar __val__ = t('main description')\nbuf.push(escape(null == __val__ ? \"\" : __val__));\nbuf.push('</p><div id=\"tab-content\"></div></div>');\n}\nreturn buf.join(\"\");\n};","module.exports = function anonymous(locals, attrs, escape, rethrow, merge) {\nattrs = attrs || jade.attrs; escape = escape || jade.escape; rethrow = rethrow || jade.rethrow; merge = merge || jade.merge;\nvar buf = [];\nwith (locals || {}) {\nvar interp;\nbuf.push('<H1>Statistiques d\\'achat nutritionnelles.</H1><div id=\"chartContainer\"></div><button type=\"button\" class=\"btn btn-primary\"> Recharger</button>');\n}\nreturn buf.join(\"\");\n};","var StatsView = require('./stats_view');\nvar CoachView = require('./coach_view');\nvar ControlView = require('./control_view');\n\nmodule.exports = AppView = Backbone.View.extend({\n\n    el: 'body',\n    template: require('../templates/home'),\n    events: {\n        \"click #stats\": \"statsView\",\n        \"click #coach\": \"coachView\",\n        \"click #control\": \"controlView\"\n    },\n\n    // initialize is automatically called once after the view is constructed\n    initialize: function() {\n        // this.listenTo(this.collection, \"add\", this.onBookmarkAdded);\n    },\n\n    render: function() {\n\n        // we render the template\n        this.$el.html(this.template());\n\n        // fetch the receipts from the database\n        this.collection.fetch();\n    },\n\n    statsView: function(event) {\n      // render the stats view\n      statsView = new StatsView({\n          model: this.collection\n      });\n      statsView.render();\n      this.$el.find('#tab-content').html(statsView.$el);\n    },\n    \n    coachView:function(event){\n\t\tcoachView = new CoachView({\n\t        model: this.collection\n\t    });\n\t    coachView.render();\n\t    this.$el.find('#tab-content').html(coachView.$el);\n    },\n    \n    controlView:function(event){\n\t\tcontrolView = new ControlView({\n\t        model: this.collection\n\t    });\n\t    controlView.render();\n\t    this.$el.find('#tab-content').html(controlView.$el);\n    }\n});","//var SectionView = require('./section');\nvar ReceiptCollection = require('../collections/receipts');\n\nmodule.exports = StatsView = Backbone.View.extend({\n\n    tagName: 'div',\n    template: require('../templates/coach'),\n    events: {\n        //\"click .receipt\": \"toggleSections\",    \n        //\"click .toggle\": \"toggleSectionsNoDefault\"    \n    },\n\n    initialize: function() {\n        // this.collection = new ReceiptCollection([], { receiptId: this.model.attributes.receiptId });\n        \n    },\n\n    render: function() {\n        this.$el.html(this.template({\n            receipt: this.model.toJSON()\n        }));\n    },\n    \n});\n\n","//var SectionView = require('./section');\nvar ReceiptCollection = require('../collections/receipts');\n\nmodule.exports = StatsView = Backbone.View.extend({\n\n    tagName: 'div',\n    template: require('../templates/control'),\n    events: {\n        //\"click .receipt\": \"toggleSections\",    \n        //\"click .toggle\": \"toggleSectionsNoDefault\"    \n    },\n\n    initialize: function() {\n        // this.collection = new ReceiptCollection([], { receiptId: this.model.attributes.receiptId });\n        \n    },\n\n    render: function() {\n        this.$el.html(this.template());\n        this.getData();\n    },\n    \n    getData: function(){\n    \t// asks server for product without infos.\n    \tvar that = this;\n    \tvar productBody = this.$el.find(\"#products-body\");\n    \tvar productRowTemplate = _.template(this.$el.find(\"#template-row\").html());\n    \tproductBody.html(\"\");\n    \t$.getJSON('invalidProducts', function(data) {\n    \t\t$.each(data, function(key, val) {\n    \t\t\tproductBody.append(productRowTemplate(val));\n    \t\t});\n    \t});\n    }\n    \n});\n\n","//var SectionView = require('./section');\nvar ReceiptCollection = require('../collections/receipts');\n\nmodule.exports = StatsView = Backbone.View.extend({\n\n    tagName: 'div',\n    template: require('../templates/stats'),\n    events: {\n        //\"click .receipt\": \"toggleSections\",    \n        //\"click .toggle\": \"toggleSectionsNoDefault\"    \n    },\n\n    initialize: function() {\n    },\n\n    render: function() {\n        this.$el.html(this.template({\n            receipt: this.model.toJSON()\n        }));\n        var that = this;\n        // async to allow proper refresh.\n        setTimeout(function(){\n        \tthat.updateChart();\n        },0);\n    },\n    \n    updateChart: function (callback) {\n    \tvar dataPoints = [];\n    \tvar averagePoints = [];\n    \tvar chartContainer = this.$el.find(\"#chartContainer\");\n\t\tvar chart = new CanvasJS.Chart(chartContainer,{\n\t\t\ttitle:{\n\t\t\t\ttext: \"Energy Chart\"\n\t\t\t}, \n\t\t\taxisX:{\n\t\t\t   labelAngle: 50,\n\t\t\t   valueFormatString: \"M/Y\",\n\t\t\t   lineThickness:0,\n\t\t\t   gridThickness:0,\n\t\t\t   tickThickness:0,\n\t\t\t   interval:1,\n\t\t\t   intervalType:\"week\"\n\t\t\t},\n\t\t\taxisY:{\n\t\t\t\ttitle:\"Kilo Joules\",\n\t\t\t\tvalueFormatString: \"0.##\",\n\t\t\t\tlabelFontSize:1,\n\t\t\t\tlineThickness:0,\n\t\t\t\tgridThickness:0,\n\t\t\t\ttickThickness:0,\n\t\t\t\tminimum:0,\n\t\t\t\tinterval:10\n\t\t\t},\n\t\t\tdata: [\n\t\t\t       {\n\t\t\t    \t   type: \"column\",\n\t\t\t    \t   color: \"rgba(54,158,173,.7)\",\n\t\t\t    \t   dataPoints: dataPoints,\n\t\t\t    \t   indexLabelPlacement:\"outside\",\n\t\t\t    \t   indexLabelAngle:50,\n\t\t\t    \t   indexLabel: \"{y}\"\n\t\t\t       },\n\t\t\t       {\n\t\t\t    \t   type: \"splineArea\",\n\t\t\t    \t   color: \"rgba(8,15,173,.7)\",\n\t\t\t    \t   dataPoints: averagePoints,\n\t\t\t    \t   markerType:\"none\"\n\t\t\t       }\n\t\t\t ]\n\t\t});\n\t\tthis.chart = chart;\n\t\t// empty datapoints.\n    \tdataPoints.length = 0;\n    \taveragePoints.length = 0;\n\t\t// build stats.\n\t\t$.getJSON('receiptStats', function(data) {\n\t\t\tvar receiptStats = data;\n\t\t\tvar prevDay;\n\t\t\tvar prevValue;\n\t\t\t$.each(receiptStats, function(key, val) {\n\t\t\t\tvar date = new Date(val.timestamp);\n\t\t\t\tvar day = new Date(date.getFullYear(), date.getMonth(), date.getDate());\n\t\t\t\tvar energy = val.energy;\n\t\t\t\tif(prevDay){\n\t\t\t\t\tdays = ((day.getTime()-prevDay.getTime())/(1000*60*60*24));\n\t\t\t\t\tif(days==0) {\n\t\t\t\t\t\tlastDataPoint = dataPoints.pop();\n\t\t\t\t\t\tenergy = lastDataPoint.y + energy;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tmeanValue = Math.round(prevValue / days * 100) / 100;\n\t\t\t\t\t\tfor(var theTime = prevDay.getTime(); theTime<day.getTime(); theTime+=(1000*60*60*24)){\n\t\t\t\t\t\t\taveragePoints.push({x:new Date(theTime), y:meanValue});\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tprevDay   = day;\n\t\t\t\tprevValue = energy;\n\t\t\t\tconsole.log(day, energy);\n\t\t\t\tdataPoints.push({x:day, y: energy});\n\t\t\t});\n\t\t\tconsole.log(\"nb points:\",dataPoints.length);\n\t\t\t\n\t\t\t// refresh view.\n\t\t\tchart.render();\n\n\t\t\tif(callback)\n\t\t\t\tcallback();\n\t\t});\n\t}\n});\n\n"]}