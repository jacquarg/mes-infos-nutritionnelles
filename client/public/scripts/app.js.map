{"version":3,"file":"public/scripts/app.js","sources":["app/application.js","app/collections/receipts.js","app/initialize.js","app/locales/en.js","app/locales/fr.js","app/models/receipt.js","app/router.js","app/templates/home.jade","app/templates/stats.jade","app/views/app_view.js","app/views/stats_view.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AALA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AApCA;;A,CCAA;;AACA;AACA;AACA;AAHA;;A,CCAA;;AACA;AACA;AACA;AAHA;;A,CCAA;;AACA;AACA;AACA;AAHA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAjBA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAdA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA1CA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AApFA;;A","sourcesContent":["module.exports = {\n\n    initialize: function() {\n        var Router = require('router');\n        this.router = new Router();\n        Backbone.history.start();\n    }\n};","Receipt = require('../models/receipt');\nmodule.exports = ReceiptDetails = Backbone.Collection.extend({\n    model: Receipt,\n    url: 'receipts'\n})\n","// The function called from index.html\n$(document).ready(function() {\n    var app = require('application');\n\n    var locale = 'fr'; // default locale\n\n    // we'll need to tweak the server to allow this\n    $.ajax('cozy-locale.json', {\n        success: function(data) {\n            locale = data.locale\n            initializeLocale(locale);\n        },\n        error: function() {\n            initializeLocale(locale);\n        }\n    });\n\n    // let's define a function to initialize Polyglot\n    var initializeLocale = function(locale) {\n        var locales = {};\n        try {\n            locales = require('locales/' + locale);\n        }\n        catch(err) {\n            locales = require('locales/en');\n        }\n\n        var polyglot = new Polyglot();\n        // we give polyglot the data\n        polyglot.extend(locales);\n\n        // handy shortcut\n        window.t = polyglot.t.bind(polyglot);\n        app.initialize();\n    };\n});\n","module.exports = {\n    \"main title\": \"Welcome to MyInfo Nutritional\",\n    \"main description\": \"This application will help you track your shopping from nutrional point of view!\",\n}","module.exports = {\n    \"main title\": \"Bienvenue sur MesInfos Nutritionelles\",\n    \"main description\": \"Cette application vous permet de suivre vos achats en termes nutrionnels. !\",\n}","module.exports = Receipt = Backbone.Model.extend({\n\n})\n","var AppView = require('views/app_view');\nvar ReceiptCollection = require('collections/receipts');\n\nvar receipts = new ReceiptCollection();\n\nmodule.exports = Router = Backbone.Router.extend({\n\n    routes: {\n        '': 'main'\n    },\n\n    main: function() {\n        var mainView = new AppView({\n            collection: receipts\n        });\n        mainView.render();\n    }\n});","module.exports = function anonymous(locals, attrs, escape, rethrow, merge) {\nattrs = attrs || jade.attrs; escape = escape || jade.escape; rethrow = rethrow || jade.rethrow; merge = merge || jade.merge;\nvar buf = [];\nwith (locals || {}) {\nvar interp;\nbuf.push('<head><script src=\"Chart.js\"> </script></head><h1>');\nvar __val__ = t('main title')\nbuf.push(escape(null == __val__ ? \"\" : __val__));\nbuf.push('</h1><p>');\nvar __val__ = t('main description')\nbuf.push(escape(null == __val__ ? \"\" : __val__));\nbuf.push('</p><ul class=\"nav nav-tabs\"><li class=\"active\"> <a id=\"statsButton\" data-toggle=\"tab\"> Mes statistiques nutritionnels</a></li><li> <a id=\"coachButton\" data-toggle=\"tab\"> Analyse</a></li><li><a id=\"controlButton\" data-toggle=\"tab\"> VÃ©rification</a></li></ul><div id=\"tab-content\" class=\"tab-content\"></div>');\n}\nreturn buf.join(\"\");\n};","module.exports = function anonymous(locals, attrs, escape, rethrow, merge) {\nattrs = attrs || jade.attrs; escape = escape || jade.escape; rethrow = rethrow || jade.rethrow; merge = merge || jade.merge;\nvar buf = [];\nwith (locals || {}) {\nvar interp;\nbuf.push('<H1>Stats</H1><div id=\"chartContainer\" style=\"height: 300px; width: 100%;\"></div><button type=\"button\" class=\"btn btn-primary\"> Recharger</button>');\n}\nreturn buf.join(\"\");\n};","var StatsView = require('./stats_view');\n\nmodule.exports = AppView = Backbone.View.extend({\n\n    el: 'body',\n    template: require('../templates/home'),\n    events: {\n        \"click #statsButton\": \"statsView\",\n        \"click #coachButton\": \"coachView\",\n        \"click #controlButton\": \"controlView\"\n    },\n\n    // initialize is automatically called once after the view is constructed\n    initialize: function() {\n        // this.listenTo(this.collection, \"add\", this.onBookmarkAdded);\n    },\n\n    render: function() {\n\n        // we render the template\n        this.$el.html(this.template());\n\n        // fetch the receipts from the database\n        this.collection.fetch();\n    },\n\n    statsView: function(event) {\n      // render the stats view\n      statsView = new StatsView({\n          model: this.collection\n      });\n      statsView.render();\n      this.$el.find('#tab-content').html(statsView.$el);\n    },\n    \n    coachView:function(event){\n    \tthis.$el.find('#tab-content').html(\"\");\n    },\n    \n    controlView:function(event){\n    \tthis.$el.find('#tab-content').html(\"\");\n    }\n});","//var SectionView = require('./section');\nvar ReceiptCollection = require('../collections/receipts');\n\nmodule.exports = StatsView = Backbone.View.extend({\n\n    tagName: 'div',\n    template: require('../templates/stats'),\n    events: {\n        //\"click .receipt\": \"toggleSections\",    \n        //\"click .toggle\": \"toggleSectionsNoDefault\"    \n    },\n\n    initialize: function() {\n        // this.collection = new ReceiptCollection([], { receiptId: this.model.attributes.receiptId });\n        \n    },\n\n    render: function() {\n        this.$el.html(this.template({\n            receipt: this.model.toJSON()\n        }));\n        this.chartStats();\n    },\n    \n    chartStats: function () {\n    \tvar chartContainer = this.$el.find(\"#chartContainer\");\n\t\tvar chart = new CanvasJS.Chart(chartContainer,{\n\t\t\ttitle:{\n\t\t\t\ttext: \"Spline Area Chart\"\n\t\t\t},    \t\t\n\t\t\tdata: [\n\t\t\t{        \n\t\t\t\ttype: \"splineArea\",\n\t\t\t\tcolor: \"rgba(54,158,173,.7)\",\n\t\t\t\tdataPoints: [\n\t\t\t\t{x: new Date(1992,0), y: 2506000},     \n\t\t\t\t{x: new Date(1993,0), y: 2798000},     \n\t\t\t\t{x: new Date(1994,0), y: 3386000},     \n\t\t\t\t{x: new Date(1995,0), y: 6944000},     \n\t\t\t\t{x: new Date(1996,0), y: 6026000},     \n\t\t\t\t{x: new Date(1997,0), y: 2394000},     \n\t\t\t\t{x: new Date(1998,0), y: 1872000, indexLabel:\"test\"},     \n\t\t\t\t{x: new Date(1999,0), y: 2140000},     \n\t\t\t\t{x: new Date(2000,0), y: 7289000},     \n\t\t\t\t{x: new Date(2001,0), y: 4830000},     \n\t\t\t\t{x: new Date(2002,0), y: 2009000},     \n\t\t\t\t{x: new Date(2003,0), y: 2840000},     \n\t\t\t\t{x: new Date(2004,0), y: 2396000},     \n\t\t\t\t{x: new Date(2005,0), y: 1613000},     \n\t\t\t\t{x: new Date(2006,0), y: 2821000},     \n\t\t\t\t{x: new Date(2007,0), y: 2000000},     \n\t\t\t\t{x: new Date(2008,0), y: 1397000}    \n\t\t\t\t]\n\t\t\t},\n\t\t\t{        \n\t\t\t\ttype: \"spline\",\n\t\t\t\tcolor: \"rgba(12,25,73,.7)\",\n\t\t\t\tdataPoints: [\n\t\t\t\t{x: new Date(1993,0), y: 2506000},     \n\t\t\t\t{x: new Date(1994,0), y: 2798000},     \n\t\t\t\t{x: new Date(1995,0), y: 3386000},     \n\t\t\t\t{x: new Date(1996,0), y: 6944000},     \n\t\t\t\t{x: new Date(1997,0), y: 6026000},     \n\t\t\t\t{x: new Date(1998,0), y: 2394000},     \n\t\t\t\t{x: new Date(1999,0), y: 1872000},     \n\t\t\t\t{x: new Date(2000,0), y: 2140000},     \n\t\t\t\t{x: new Date(2001,0), y: 7289000},     \n\t\t\t\t{x: new Date(2002,0), y: 4830000},     \n\t\t\t\t{x: new Date(2003,0), y: 2009000},     \n\t\t\t\t{x: new Date(2004,0), y: 2840000},     \n\t\t\t\t{x: new Date(2005,0), y: 2396000},     \n\t\t\t\t{x: new Date(2006,0), y: 1613000},     \n\t\t\t\t{x: new Date(2007,0), y: 2821000},     \n\t\t\t\t{x: new Date(2008,0), y: 2000000},     \n\t\t\t\t{x: new Date(2009,0), y: 1397000}    \n\t\t\t\t]\n\t\t\t}                 \n\t\t\t]\n\t\t});\n\n\t\tchart.render();\n\t}\n});\n\n"]}